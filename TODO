-automate backup(casey)
-create monitoring(casey), schedule backup(casey)
-meta: cost estimate/donate/financial health monitor (+ general DSI/project health)

-finish customized fields/settings (almost)
-services + forms - (account view, coop summary)
-javascript widgets, final forms + services (add action w/day picker) 

-export procedure <<<<
-period picker shift over time
-login check 
-form validation failures/errors
-conn pool(casey) + performance/memory basic check --------- DONE

-automate test w/travis
-document hosted release, refresh method
-req, spec wiki (github)
-basic user manual, dev manual
-document building prod env

notes...

export
  invoke COPY command with tmp directory
  zip directory, provide link zip, cron job periodic empty directory
  capaPatronage.csv, capaActions.csv, capaResults.csv, capaSettings.csv

release/refresh - (config files??)
  dev: 
    -checkout, clean build
    -restore prod backup
    -run db migrate, start
    -tag last commit
  prod:
    -backup db
    -checkout, build
    -stop
    -run db migrate
    -build/install
    -start

  prod:
    -backup db
  dev:
    -restore db
    -run db migrate, start

monitoring
   hosted?(scout), ping enter page

prod env setup
   -base compiler
   -libraries, utilities outside of haskell
   -developer programs
   -haskell libraries/cabal
   -configuration

dev manual (most custom, specific to more general)
   -haskell main libraires
   -haskell peripheral libraries
   -haskell advanced concepts
   -haskell general
   -javascript libraries, plugins
   -javascript core
   -postgres dev
   -postgres admin
   -monitoring usage
   -protocols, references
   -build procedure
   -design paradigms
   -admin section for remote support
   -pieces that need upgrading: ...

user manual (core, frequent steps to less frequent)
   -references
   -screen shots + descriptions
   -getting started guide

remote support
   -bug description, post to github. screenshots, times, data helpful
   -contact user, setup screenshare
   -get screenshots, details on when happened, what data


FUTURE
-filter deactivated members, accounts
-add account

